#include <reg51.h>
#define PWM_Period 0xB7FE   //Define value to be loaded in timer for PWM period of 20 milli second
sbit Servo_Motor_Pin = P2^0;
unsigned int ON_Period, OFF_Period, DutyCycle;

void delay(unsigned int count) //delay function for 1ms
{
    int i,j;
    for(i=0; i<count; i++)
      for(j=0; j<112; j++);
}

void Timer_init()            
{
  TMOD = 0x01;                   //timer0 mode1
  TH0 = (PWM_Period >> 8);       //20ms timer value
  TL0 = PWM_Period;              
  TR0 = 1;                       //start timer0
}

void Timer0_ISR() interrupt 1   //timer 0 interrupy service routine(ISR)
{
  Servo_Motor_Pin = !Servo_Motor_Pin;
  if(Servo_Motor_Pin)
  {
    TH0 = (ON_Period >> 8);
    TL0 = ON_Period;
  }
  else
  {
    TH0 = (OFF_Period >> 8);
    TL0 = OFF_Period;
  }  
}

void Set_DutyCycle_To(float duty_cycle)  //calculate on and off period from duty cycle
{
  float period = 65535 - PWM_Period;
  ON_Period = ((period/100.0) * duty_cycle);
  OFF_Period = (period - ON_Period);  
  ON_Period = 65535 - ON_Period;  
  OFF_Period = 65535 - OFF_Period;
}

int main()
{
   EA  = 1;                 //enable global interrupt
   ET0 = 1;                 //enable timer0 interrupt
   Timer_init();
   while(1)
    {
  Set_DutyCycle_To(2.7);    //0.54ms(2.7%) of 20ms(100%) period
  delay(1000);
  Set_DutyCycle_To(7);     //1.4ms(7%) of 20ms(100%) period
  delay(1000);
  Set_DutyCycle_To(12);    //2.4ms(12%) of 20ms(100%) period
  delay(1000);
    }
}
