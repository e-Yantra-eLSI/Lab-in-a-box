#include <reg51.h>
#include <intrins.h>
#define PWM_Period 0xB7FE  // Define value to be loaded in timer for PWM period of 20 milli second

sbit PWM_Out_Pin    = P2^0; // PWM Out Pin for speed control
sbit Speed_Inc      = P1^0; // Speed Increment switch pin
sbit Speed_Dec      = P1^1; // Speed Decrement switch pin
sbit Change_Dir     = P1^2; // Rotation direction change switch pin

sbit M1_Pin1        = P1^6; //Motor Pin 1
sbit M1_Pin2        = P1^7; // Motor Pin 2

unsigned int ON_Period, OFF_Period, DutyCycle, Speed;

// Function to provide delay of 1ms at 11.0592 MHz
void delay(unsigned int count)
{
    int i,j;
    for(i=0; i<count; i++)
            for(j=0; j<112; j++);
}

void Timer_init()
{
    TMOD = 0x01;        //Timer0 mode1
    TH0 = (PWM_Period >> 8);// 20ms timer value
    TL0 = PWM_Period;
    TR0 = 1;        // Start timer0
}

// Timer0 interrupt service routine (ISR)
void Timer0_ISR() interrupt 1  
{
    PWM_Out_Pin = !PWM_Out_Pin;
    if(PWM_Out_Pin)
    {
        TH0 = (ON_Period >> 8);
        TL0 = ON_Period;
    }  
    else
    {
        TH0 = (OFF_Period >> 8);
        TL0 = OFF_Period;
    }  
           
}

// Calculate ON & OFF period from PWM period & duty cycle
void Set_DutyCycle_To(float duty_cycle)
{
    float period = 65535 - PWM_Period;
    ON_Period = ((period/100.0) * duty_cycle);
    OFF_Period = (period - ON_Period);  
    ON_Period = 65535 - ON_Period;  
    OFF_Period = 65535 - OFF_Period;
}

// Initially Motor Speed & Duty cycle is zero and in either direction
void Motor_Init()
{
    Speed = 0;
    M1_Pin1 = 1;
    M1_Pin2 = 0;
    Set_DutyCycle_To(Speed);
}

int main()
{
  EA  = 1;          // Enable global interrupt
  ET0 = 1;              // Enable timer0 interrupt
  Timer_init();
  Motor_Init();
  while(1)
    {
    // Increment Duty cycle i.e. speed by 10% for Speed_Inc Switch
    if(Speed_Inc == 1)
        {
            if(Speed < 100)
            Speed += 10;
            Set_DutyCycle_To(Speed);
            while(Speed_Inc == 1);
            delay(200);
        }
    // Decrement Duty cycle i.e. speed by 10% for Speed_Dec Switch
    if(Speed_Dec == 1)
        {
            if(Speed > 0)
            Speed -= 10;
            Set_DutyCycle_To(Speed);
            while(Speed_Dec == 1);
            delay(200);
        }
    // Change rotation direction for Change_Dir Switch
    if(Change_Dir == 1)
        {
            M1_Pin1 = !M1_Pin1;
            M1_Pin2 = !M1_Pin2;
            while(Change_Dir == 1);
            delay(200);
        }
    }
}
